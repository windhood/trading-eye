"""add portofolio, trade and execution

Revision ID: 64a2c0267548
Revises: d4867f3a4c0a
Create Date: 2020-11-19 07:40:24.804098

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64a2c0267548'
down_revision = 'd4867f3a4c0a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('portfolio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('currency', sa.Enum('USD', 'CAD', 'CNY', 'EUR', 'JPY', name='currency'), nullable=True),
    sa.Column('max_risk_per_share', sa.Float(), nullable=True),
    sa.Column('max_risk_per_trade', sa.Float(), nullable=True),
    sa.Column('max_capital_per_trade', sa.Float(), nullable=True),
    sa.Column('initial_balance', sa.Float(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_id'), 'portfolio', ['id'], unique=False)
    op.create_index(op.f('ix_portfolio_title'), 'portfolio', ['title'], unique=False)
    op.create_table('trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('type', sa.Enum('LONG', 'SHORT', 'CASH_IN', 'CASH_OUT', name='tradetype'), nullable=True),
    sa.Column('initial_position', sa.Integer(), nullable=True),
    sa.Column('initial_risk', sa.Float(), nullable=True),
    sa.Column('current_position', sa.Integer(), nullable=True),
    sa.Column('current_risk', sa.Float(), nullable=True),
    sa.Column('profit_lost', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('risk_ratio', sa.Float(), nullable=True),
    sa.Column('commissions', sa.Float(), nullable=True),
    sa.Column('portfolio_balance', sa.Float(), nullable=True),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trade_id'), 'trade', ['id'], unique=False)
    op.create_index(op.f('ix_trade_name'), 'trade', ['name'], unique=False)
    op.create_index(op.f('ix_trade_ticker'), 'trade', ['ticker'], unique=False)
    op.create_table('execution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=50), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.Column('commission', sa.Float(), nullable=True),
    sa.Column('stop_price', sa.Float(), nullable=True),
    sa.Column('target_price', sa.Float(), nullable=True),
    sa.Column('type', sa.Enum('INITIAL', 'ADD', 'EXIT', name='executiontype'), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('trade_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_execution_id'), 'execution', ['id'], unique=False)
    op.create_index(op.f('ix_execution_ticker'), 'execution', ['ticker'], unique=False)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_execution_ticker'), table_name='execution')
    op.drop_index(op.f('ix_execution_id'), table_name='execution')
    op.drop_table('execution')
    op.drop_index(op.f('ix_trade_ticker'), table_name='trade')
    op.drop_index(op.f('ix_trade_name'), table_name='trade')
    op.drop_index(op.f('ix_trade_id'), table_name='trade')
    op.drop_table('trade')
    op.drop_index(op.f('ix_portfolio_title'), table_name='portfolio')
    op.drop_index(op.f('ix_portfolio_id'), table_name='portfolio')
    op.drop_table('portfolio')
    # ### end Alembic commands ###
